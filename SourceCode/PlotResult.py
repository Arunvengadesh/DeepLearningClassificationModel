from matplotlib.ticker import NullFormatter
import numpy as np
import matplotlib.pyplot as plt
#1.**********No Hidden Layer***********************
SingleLayerTrainAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\SingleLayerTrainAcc.txt")
SingleLayerTestAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\SingleLayerTestAcc.txt")
SingleLayerTrainCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\SingleLayerTrainCrossEntropy.txt")
SingleLayerTestCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\SingleLayerTestCrossEntropy.txt")
#2.**********Two Hidden AllSoftmax Layer***********************
TwoLayerTrainAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainAcc.txt")
TwoLayerTestAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestAcc.txt")
TwoLayerTrainCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainCrossEntropy.txt")
TwoLayerTestCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestCrossEntropy.txt")
#3.************** TwoLayerTrainSigmoidAcc************
TwoLayerTrainSigmoidAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainSigmoidAcc.txt")
TwoLayerTestSigmoidAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestSigmoidAcc.txt")
TwoLayerTrainSigmoidCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainSigmoidCrossEntropy.txt")
TwoLayerTestSigmoidCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestSigmoidCrossEntropy.txt")
#4.**************TwoLayerTrainReluAcc****************
TwoLayerTrainReluAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainReluAcc.txt")
TwoLayerTestReluAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestReluAcc.txt")
TwoLayerTrainReluCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainReluCrossEntropy.txt")
TwoLayerTestReluCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestReluCrossEntropy.txt")
#5.**************TwoHidenLayerAdamOptReluAndSoftmaxMtd
TwoLayerTrainAdamRELUAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainAdamRELUAcc.txt")
TwoLayerTestAdamRELUAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestAdamRELUAcc.txt")
TwoLayerTrainAdamRELUCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainAdamRELUCrossEntropy.txt")
TwoLayerTestAdamRELUCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestAdamRELUCrossEntropy.txt")
#6.**************TwoHidenLayerAdamDecayOptReluDropOutAndSoftmaxMtd
TwoLayerTrainAdamDecayReluDropOutAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainAdamDecayReluDropOutAcc.txt")
TwoLayerTestAdamDecayReluDropOutAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestAdamDecayReluDropOutAcc.txt")
TwoLayerTrainAdamDecayReluDropOutCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainAdamDecayReluDropOutCrossEntropy.txt")
TwoLayerTestAdamDecayReluDropOutCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestAdamDecayReluDropOutCrossEntropy.txt")
#7.****************Two Hidden Layer Sigoid RMSProp Acc*********
TwoLayerTrainSigmoidAccRMSProp = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainSigmoidAccRMSProp.txt")
TwoLayerTestSigmoidAccRMSProp = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestSigmoidAccRMSProp.txt")
TwoLayerTrainSigmoidCrossEntropyRMSProp = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainSigmoidCrossEntropyRMSProp.txt")
TwoLayerTestSigmoidCrossEntropyRMSProp = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestSigmoidCrossEntropyRMSProp.txt")
#8.******************TwoHidenLayerAdamOptSigmodAndSoftmax
TwoLayerTrainAdamOptSigmoidAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainAdamOptSigmoidAcc.txt")
TwoLayerTestAdamOptSigmoidAcc = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestAdamOptSigmoidAcc.txt")
TwoLayerTrainAdamOptSigmoidCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainAdamOptSigmoidCrossEntropy.txt")
TwoLayerTestAdamOptSigmoidCrossEntropy = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestAdamOptSigmoidCrossEntropy.txt")
#9.******************TwoHidenLayerSigmodAndSoftmaxAdaGrad
TwoLayerTrainSigmoidAccAdaGrad = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainSigmoidAccAdaGrad.txt")
TwoLayerTestSigmoidAccAdaGrad = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestSigmoidAccAdaGrad.txt")
TwoLayerTrainSigmoidCrossEntropyAdaGrad = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainSigmoidCrossEntropyAdaGrad.txt")
TwoLayerTestSigmoidCrossEntropyAdaGrad = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestSigmoidCrossEntropyAdaGrad.txt")
#10.******************TwoHidenLayerSigmodAndSoftmaxMomentum
TwoLayerTrainSigmoidAccMomentum = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainSigmoidAccMomentum.txt")
TwoLayerTestSigmoidAccMomentum = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestSigmoidAccMomentum.txt")
TwoLayerTrainSigmoidCrossEntropyMomentum = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainSigmoidCrossEntropyMomentum.txt")
TwoLayerTestSigmoidCrossEntropyMomentum = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestSigmoidCrossEntropyMomentum.txt")
#11.**********************Convolutional***********
TwoLayerTrainRELUAccConvolution = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainRELUAccConvolution.txt")
TwoLayerTestRELUAccConvolution = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestRELUAccConvolution.txt")
TwoLayerTrainRELUCrossEntropyConvolution = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTrainRELUCrossEntropyConvolution.txt")
TwoLayerTestRELUCrossEntropyConvolution = np.loadtxt("E:\\Study_materials\\Semester-4\\Project\\FinalSemProgress\\PlotData\\TwoLayerTestRELUCrossEntropyConvolution.txt")



NumOfIteration = 25000
x = np.arange(NumOfIteration-1)
#1.**********No Hidden Layer***********************
# plt.figure(1)
# plt.plot(x,SingleLayerTrainAcc,label = 'No Hidden Layer Train Acc')
# plt.plot(x,SingleLayerTestAcc,label = 'No Hidden Layer Test Acc')
# plt.legend()
# plt.ylabel('Accuracy')
# plt.yticks(np.arange(0, 1, 0.03))
# plt.ylim((0, 1))
# #plt.yticks(np.arange(0, 1.1, 0.1))
# plt.xlabel('Iteration')
# plt.title('No Hidden Layer Accuracy')
# plt.grid(True)
# plt.figure(2)
# plt.plot(x,SingleLayerTrainCrossEntropy,label = 'No Hidden Layer Train Cross Entropy')
# plt.plot(x,SingleLayerTestCrossEntropy,label = 'No Hidden Layer Test Cross Entropy')
# plt.ylabel('Cross Entropy')
# plt.xlabel('Iteration')
# plt.yticks(np.arange(0, 2.5, 0.1))
# plt.ylim((0, 2.5))
# plt.title('No Hidden Layer Cross Entropy')
# plt.grid(True)
# plt.legend()
#2.**********Two Hidden AllSoftmax Layer***********************
# plt.figure(3)
# plt.plot(x,TwoLayerTrainAcc,label = 'Two Hidden Layer Train All Sofmax Acc')
# plt.plot(x,TwoLayerTestAcc,label = 'Two Hidden Layer Test All Sofmax Acc')
# plt.legend()
# plt.yticks(np.arange(0, 1, 0.03))
# plt.ylim((0, 1))
# plt.ylabel('Accuracy')
# plt.yticks(np.arange(0, 1.1, 0.1))
# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer All Sofmax Accuracy')
# plt.grid(True)
# plt.figure(4)
# plt.plot(x,TwoLayerTrainCrossEntropy,label = 'Two Hidden Layer Train Cross Entropy')
# plt.plot(x,TwoLayerTestCrossEntropy,label = 'Two Hidden Layer Train Cross Entropy')
# plt.ylabel('Cross Entropy')
# plt.xlabel('Iteration')
# plt.yticks(np.arange(0, 2.5, 0.1))
# plt.ylim((0, 2.5))
# plt.title('Two Hidden Layer All Sofmax Cross Entropy')
# plt.grid(True)
# plt.legend()
# #3.************** TwoLayerTrainSigmoidAcc************
# plt.figure(5)
# plt.plot(x,TwoLayerTrainSigmoidAcc,label = 'Two Hidden Layer Train Sigmoid Acc')
# plt.plot(x,TwoLayerTestSigmoidAcc,label = 'Two Hidden Layer Test Sigmoid Acc')
# plt.legend()
# plt.yticks(np.arange(0, 1, 0.03))
# plt.ylim((0, 1))
# plt.ylabel('Accuracy')
# #plt.yticks(np.arange(0, 1.1, 0.1))
# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer Sigmoid Accuracy')
# plt.grid(True)
# plt.figure(6)
# plt.plot(x,TwoLayerTrainSigmoidCrossEntropy,label = 'Two Hidden Layer Train Sigmoid Cross Entropy')
# plt.plot(x,TwoLayerTestSigmoidCrossEntropy,label = 'Two Hidden Layer Test Sigmoid Cross Entropy')
# plt.yticks(np.arange(0, 2.5, 0.1))
# plt.ylim((0, 2.5))
# plt.ylabel('Cross Entropy')
# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer Sigmoid Cross Entropy')
# plt.grid(True)
# plt.legend()
# #4.**************TwoLayerTrainReluAcc****************
# plt.figure(7)
# plt.plot(x,TwoLayerTrainReluAcc,label = 'Two Hidden Layer Train RELU Acc')
# plt.plot(x,TwoLayerTestReluAcc,label = 'Two Hidden Layer Test RELU Acc')
# plt.legend()
# plt.ylabel('Accuracy')
# plt.yticks(np.arange(0, 1, 0.03))
# plt.ylim((0, 1))
# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer RELU Accuracy')
# plt.grid(True)
# plt.figure(8)
# plt.plot(x,TwoLayerTrainReluCrossEntropy,label = 'Two Hidden Layer Train RELU Cross Entropy')
# plt.plot(x,TwoLayerTestReluCrossEntropy,label = 'Two Hidden Layer Test RELU Cross Entropy')
# plt.ylabel('Cross Entropy')
# plt.yticks(np.arange(0, 2.5, 0.1))
# plt.ylim((0, 2.5))
# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer RELU Cross Entropy')
# plt.grid(True)
# plt.legend()


# #5.**************TwoHidenLayerAdamOptReluAndSoftmaxMtd
# plt.figure(9)
# plt.plot(x,TwoLayerTrainAdamRELUAcc,label = 'Two Hidden Layer Train Adam  RELU Acc')
# plt.plot(x,TwoLayerTestAdamRELUAcc,label = 'Two Hidden Layer Test Adam RELU Acc')
# plt.legend()
# plt.ylabel('Accuracy')
# plt.yticks(np.arange(0, 1, 0.03))
# plt.ylim((0, 1))

# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer Adam RELU Accuracy')
# plt.grid(True)
# plt.figure(10)
# plt.plot(x,TwoLayerTrainAdamRELUCrossEntropy,label = 'Two Hidden Layer Train Adam RELU Cross Entropy')
# plt.plot(x,TwoLayerTestAdamRELUCrossEntropy,label = 'Two Hidden Layer Test Adam RELU Cross Entropy')
# plt.ylabel('Cross Entropy')
# plt.yticks(np.arange(0, 2.5, 0.1))
# plt.ylim((0, 2.5))

# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer Adam RELU Cross Entropy')
# plt.grid(True)
# plt.legend()



# #6.**************TwoHidenLayerAdamDecayOptReluDropOutAndSoftmaxMtd
# plt.figure(11)
# plt.plot(x,TwoLayerTrainAdamDecayReluDropOutAcc,label = 'Two Hidden Layer Train Adam RELU DropoutAcc')
# plt.plot(x,TwoLayerTestAdamDecayReluDropOutAcc,label = 'Two Hidden Layer Test Adam RELU Dropout Acc')
# plt.legend()
# plt.ylabel('Accuracy')
# plt.yticks(np.arange(0, 1, 0.03))
# plt.ylim((0, 1))
# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer Adam RELU Dropout Accuracy')
# plt.grid(True)
# plt.figure(12)
# plt.plot(x,TwoLayerTrainAdamDecayReluDropOutCrossEntropy,label = 'Two Hidden Layer Train Adam RELU Dropout Cross Entropy')
# plt.plot(x,TwoLayerTestAdamDecayReluDropOutCrossEntropy,label = 'Two Hidden Layer Test Adam RELU Dropout Cross Entropy')
# plt.ylabel('Cross Entropy')
# plt.yticks(np.arange(0, 2.5, 0.1))
# plt.ylim((0, 2.5))

# plt.xlabel('Iteration')
# plt.title('Two Hidden Layer Adam RELU Dropout Cross Entropy')
# plt.grid(True)
# plt.legend()
#***************Convolution **************************

# plt.figure(11)
# plt.plot(x,TwoLayerTrainRELUAccConvolution,label = 'Convolutional Train Acc')
# plt.plot(x,TwoLayerTestRELUAccConvolution,label = 'Convolutional Test Acc')
# plt.legend()
# plt.ylabel('Accuracy')
# plt.yticks(np.arange(0, 1, 0.03))
# plt.ylim((0, 1))
# plt.xlabel('Iteration')
# plt.title('Convolutional Accuracy')
# plt.grid(True)
# plt.figure(12)
# plt.plot(x,TwoLayerTrainRELUCrossEntropyConvolution,label = 'Convolutional Train Cross Entropy')
# plt.plot(x,TwoLayerTestRELUCrossEntropyConvolution,label = 'Convolutional Test Cross Entropy')
# plt.ylabel('Cross Entropy')
# plt.yticks(np.arange(0, 2.5, 0.1))
# plt.ylim((0, 2.5))

# plt.xlabel('Iteration')
# plt.title('Convolutional Cross Entropy')
# plt.grid(True)
# plt.legend()
#*************COnsolidate Graph only Test Datas*************
plt.figure(5)
plt.plot(x,SingleLayerTestAcc,label = 'No Hidden Layer Test Acc')
plt.plot(x,TwoLayerTestSigmoidAcc,label = 'Two Hidden Layer Test Sigmoid Acc')
plt.plot(x,TwoLayerTestReluAcc,label = 'Two Hidden Layer Test RELU Acc')
plt.plot(x,TwoLayerTestAdamRELUAcc,label = 'Two Hidden Layer Test Adam RELU Acc')
plt.plot(x,TwoLayerTestAdamDecayReluDropOutAcc,label = 'Two Hidden Layer Test Adam RELU Dropout Acc')
#plt.plot(x,TwoLayerTestRELUAccConvolution,label = 'Convolutional Test Acc')
plt.legend()
plt.ylabel('Accuracy')
#plt.yticks(np.arange(0, 1.1, 0.1))
plt.xlabel('Iteration')
plt.yticks(np.arange(0, 1, 0.03))
plt.ylim((0, 1))

plt.title('Consolidated Test Accuracy')
plt.grid(True)
plt.figure(6)
plt.plot(x,SingleLayerTestCrossEntropy,label = 'No Hidden Layer Test Cross Entropy')
plt.plot(x,TwoLayerTestSigmoidCrossEntropy,label = 'Two Hidden Layer Test Sigmoid Cross Entropy')
plt.plot(x,TwoLayerTestReluCrossEntropy,label = 'Two Hidden Layer Test RELU Cross Entropy')
plt.plot(x,TwoLayerTestAdamRELUCrossEntropy,label = 'Two Hidden Layer Test Adam RELU Cross Entropy')
plt.plot(x,TwoLayerTestAdamDecayReluDropOutCrossEntropy,label = 'Two Hidden Layer Test Adam RELU Dropout Cross Entropy')
#plt.plot(x,TwoLayerTestRELUCrossEntropyConvolution,label = 'Convolutional Test Cross Entropy')
plt.yticks(np.arange(0, 2.5, 0.1))
plt.ylim((0, 2.5))
plt.ylabel('Cross Entropy')
plt.xlabel('Iteration')
plt.title('Consolidated Test Cross Entropy')
plt.grid(True)
plt.legend()





#7.***************All Train and Test Acc 
# plt.figure(13)
# plt.plot(x,SingleLayerTrainAcc,label = 'No Hidden Layer Train Acc')
# plt.plot(x,TwoLayerTrainAcc,label = 'Two Hidden Layer Train Acc')
# plt.plot(x,TwoLayerTrainSigmoidAcc,label = 'Two Hidden Layer Train Sigmoid Acc')
# plt.plot(x,TwoLayerTrainReluAcc,label = 'Two Hidden Layer Train RELU Acc')
# plt.plot(x,TwoLayerTrainAdamRELUAcc,label = 'Two Hidden Layer Train Adam  RELU Acc')
# plt.plot(x,TwoLayerTrainAdamDecayReluDropOutAcc,label = 'Two Hidden Layer Train Adam RELU Dropout Acc')

# plt.legend()
# plt.ylabel('Train Accuracy')
# plt.yticks(np.arange(0, 1.1, 0.1))
# plt.xlabel('Iteration')
# plt.title('All Train Accuracy')
# plt.grid(True)
# plt.figure(14)
# plt.plot(x,SingleLayerTestAcc,label = 'No Hidden Layer Test Acc')
# plt.plot(x,TwoLayerTestAcc,label = 'Two Hidden Layer Test Acc')
# plt.plot(x,TwoLayerTestSigmoidAcc,label = 'Two Hidden Layer Test Sigmoid Acc')
# plt.plot(x,TwoLayerTestReluAcc,label = 'Two Hidden Layer Test RELU Acc')
# plt.plot(x,TwoLayerTestAdamRELUAcc,label = 'Two Hidden Layer Test Adam RELU Acc')
# plt.plot(x,TwoLayerTestAdamDecayReluDropOutAcc,label = 'Two Hidden Layer Test Adam RELU Dropout Acc')
#8.***************All Train and Test Cross Entropy 
# plt.figure(15)
# plt.plot(x,SingleLayerTrainCrossEntropy,label = 'No Hidden Layer Train Cross Entropy')
# plt.plot(x,TwoLayerTrainCrossEntropy,label = 'Two Hidden Layer Train Cross Entropy')
# plt.plot(x,TwoLayerTrainSigmoidCrossEntropy,label = 'Two Hidden Layer Train Sigmoid Cross Entropy')
# plt.plot(x,TwoLayerTrainReluCrossEntropy,label = 'Two Hidden Layer Train RELU Cross Entropy')
# plt.plot(x,TwoLayerTrainAdamRELUCrossEntropy,label = 'Two Hidden Layer Train Adam RELU Cross Entropy')
# plt.plot(x,TwoLayerTrainAdamDecayReluDropOutCrossEntropy,label = 'Two Hidden Layer Train Adam RELU Dropout Cross Entropy')


# plt.legend()
# plt.ylabel('Train Cross Entropy')
# plt.yticks(np.arange(0, 1.1, 0.1))
# plt.xlabel('Iteration')
# plt.title('All Train Cross Entropy')
# plt.grid(True)
# plt.figure(16)
#plt.plot(x,SingleLayerTestCrossEntropy,label = 'No Hidden Layer Test Cross Entropy')
# plt.plot(x,TwoLayerTestCrossEntropy,label = 'Two Hidden Layer Test Cross Entropy')
# plt.plot(x,TwoLayerTestSigmoidCrossEntropy,label = 'Two Hidden Layer Test Sigmoid Cross Entropy')
# plt.plot(x,TwoLayerTestReluCrossEntropy,label = 'Two Hidden Layer Test RELU Cross Entropy')
# plt.plot(x,TwoLayerTestAdamRELUCrossEntropy,label = 'Two Hidden Layer Test Adam RELU Cross Entropy')
# plt.plot(x,TwoLayerTestAdamDecayReluDropOutCrossEntropy,label = 'Two Hidden Layer Test Adam RELU Dropout Cross Entropy')

# plt.ylabel('Test Cross Entropy')
# plt.xlabel('Iteration')
# plt.title('All Test Cross Entropy')
# plt.grid(True)
# plt.legend()

# #9.********Optimizer Comparison**********************
# plt.figure(17)
# plt.plot(x,TwoLayerTestSigmoidAcc,label = 'Sigmoid Gradient')
# #plt.plot(x,TwoLayerTestSigmoidAccRMSProp,label = 'Two Hidden Layer Test Sigmoid RMSProp Acc')
# plt.plot(x,TwoLayerTestAdamOptSigmoidAcc,label = 'Sigmoid AdamOpt')
# plt.plot(x,TwoLayerTestSigmoidAccAdaGrad,label = 'Sigmoid AdaGrad')
# plt.plot(x,TwoLayerTestSigmoidAccMomentum,label = 'Sigmoid Momentum')
# #plt.plot(x,TwoLayerTestRELUAccConvolution,label = 'Sigmoid Convolution')




# plt.legend()
# plt.ylabel('Accuracy')
# plt.ylim((0, 1))
# plt.yticks(np.arange(0, 1, 0.03))
# plt.xlabel('Iteration')
# plt.title('Accuracy Comparision for Various Optimization Algorithms')
# plt.grid(True)
# plt.figure(18)
# plt.plot(x,TwoLayerTestSigmoidCrossEntropy,label = 'Sigmoid Gradient')
# # #plt.plot(x,TwoLayerTestSigmoidCrossEntropyRMSProp,label = 'Two Hidden Layer Test Sigmoid RMSProp Cross Entropy')
# plt.plot(x,TwoLayerTestAdamOptSigmoidCrossEntropy,label = 'Sigmoid AdamOpt')
# plt.plot(x,TwoLayerTestSigmoidCrossEntropyAdaGrad,label = 'Sigmoid AdaGrad')
# plt.plot(x,TwoLayerTestSigmoidCrossEntropyMomentum,label = 'Sigmoid Momentum')
# #plt.plot(x,TwoLayerTestRELUCrossEntropyConvolution,label = 'Sigmoid Convolution')



# plt.ylabel('Cross Entropy')
# plt.yticks(np.arange(0, 2.5, 0.1))
# plt.ylim((0, 2.5))
# plt.xlabel('Iteration')
# plt.title('Cross Entropy Comparision for Various Optimization Algorithms')
# plt.grid(True)
# plt.legend()



plt.subplots_adjust(top=0.92, bottom=0.1, left=0.10, right=0.95, hspace=0.25, wspace=0.35)
plt.show()

